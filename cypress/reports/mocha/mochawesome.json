{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2022-09-27T23:07:13.539Z",
    "end": "2022-09-27T23:07:15.618Z",
    "duration": 2079,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "28ce6ac6-5158-4f72-a64d-80b9ef79b461",
      "title": "",
      "fullFile": "cypress/integration/1.usuarios.spec.js",
      "file": "cypress/integration/1.usuarios.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "01babd4f-1842-4015-8a6f-ce4228ab60fd",
          "title": "Casos de teste sobre a rota /usuarios da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os usuarios cadastrados",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar todos os usuarios cadastrados",
              "timedOut": null,
              "duration": 944,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarios().then(res => {\n  cy.contractValidation(res, \"get-usuarios\", 200);\n  _validaServerest.default.validarBuscaDeUsuarios(res);\n});",
              "err": {},
              "uuid": "e4b02157-6a49-443a-8dcf-1cfafa65eec8",
              "parentUUID": "01babd4f-1842-4015-8a6f-ce4228ab60fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve cadastrar um usuário com sucesso",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve cadastrar um usuário com sucesso",
              "timedOut": null,
              "duration": 253,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let usuario = _factory.default.gerarUsuario();\n_serverest.default.cadastrarUsuario(usuario).then(res => {\n  cy.contractValidation(res, 'post-usuarios', 201);\n  expect(res.body.message).to.be.eq('Cadastro realizado com sucesso');\n  Cypress.env('idUsuarioCadastrado', res.body._id);\n});",
              "err": {},
              "uuid": "a62998d1-448e-493d-860f-3360ccf1466f",
              "parentUUID": "01babd4f-1842-4015-8a6f-ce4228ab60fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve buscar usuários por Id",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar usuários por Id",
              "timedOut": null,
              "duration": 269,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuariosPorId().then(res => {\n  cy.contractValidation(res, \"get-usuarios_Id\", 200);\n  _validaServerest.default.validarBuscaDeUsuariosPorId(res);\n});",
              "err": {},
              "uuid": "922c10f2-402f-45f2-a5a7-7b7f21e83897",
              "parentUUID": "01babd4f-1842-4015-8a6f-ce4228ab60fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve cadastrar um usuário sem sucesso",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve cadastrar um usuário sem sucesso",
              "timedOut": null,
              "duration": 539,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.BuscarUsuarioExistente();\ncy.get('@usuarioExistente').then(usuario => {\n  _serverest.default.cadastrarUsuario(usuario).then(res => {\n    cy.contractValidation(res, 'post-usuarios', 400);\n    expect(res.body.message).to.be.eq('Este email já está sendo usado');\n  });\n});",
              "err": {},
              "uuid": "e53d8b68-5e2f-4651-b624-3ea8deae9c49",
              "parentUUID": "01babd4f-1842-4015-8a6f-ce4228ab60fd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e4b02157-6a49-443a-8dcf-1cfafa65eec8",
            "a62998d1-448e-493d-860f-3360ccf1466f",
            "922c10f2-402f-45f2-a5a7-7b7f21e83897",
            "e53d8b68-5e2f-4651-b624-3ea8deae9c49"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2005,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}