{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2022-09-13T20:28:09.974Z",
    "end": "2022-09-13T20:28:11.808Z",
    "duration": 1834,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4d98233f-b000-429a-919a-63c7fef7ca47",
      "title": "",
      "fullFile": "cypress/integration/1.usuarios.spec.js",
      "file": "cypress/integration/1.usuarios.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3b3b680f-ac19-417c-9d4e-35f82fe671ba",
          "title": "Casos de teste sobre a rota /usuarios da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os usuarios cadastrados na serverest",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar todos os usuarios cadastrados na serverest",
              "timedOut": null,
              "duration": 709,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarios().then(res => {\n  cy.log('Será validado o contrato');\n  cy.contractValidation(res, \"get-usuarios\", 200);\n  _validaServerest.default.validarBuscaDeUsuarios(res);\n});",
              "err": {},
              "uuid": "49b37188-abba-4f6b-858b-0732aa398318",
              "parentUUID": "3b3b680f-ac19-417c-9d4e-35f82fe671ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Não deve postar um novo usuário administrador existente",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Não deve postar um novo usuário administrador existente",
              "timedOut": null,
              "duration": 296,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.postarUsuarioSemSucesso().then(res => {\n  cy.contractValidation(res, \"post-usuarios\", 400);\n  expect(res.body.message).to.be.eq('Este email já está sendo usado');\n});",
              "err": {},
              "uuid": "88a46461-f289-4090-b2da-aed156d887c5",
              "parentUUID": "3b3b680f-ac19-417c-9d4e-35f82fe671ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve realizar login com suscesso",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve realizar login com suscesso",
              "timedOut": null,
              "duration": 446,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuariosParaLogin();\ncy.get('@usuarioLogin').then(usuario => {\n  _serverest.default.logar(usuario).then(res => {\n    _validaServerest.default.validaLoginComSucesso(res);\n    _serverest.default.salvarBearer(res);\n  });\n});",
              "err": {},
              "uuid": "ab31d91a-70f2-4c63-bed5-5ccb0ebdc9e1",
              "parentUUID": "3b3b680f-ac19-417c-9d4e-35f82fe671ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve buscar e salvar um usuário em um arquivo json",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar e salvar um usuário em um arquivo json",
              "timedOut": null,
              "duration": 245,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarios().then(res => {\n  let qtd_usuarios = res.body.quantidade;\n  let inteiro = _factory.default.gerarInteiroAleatorio();\n  cy.writeFile('./cypress/fixtures/usuario.json', res.body.usuarios[inteiro]);\n  _validaServerest.default.validarBuscaDeUsuarios(res);\n});",
              "err": {},
              "uuid": "995141fb-2616-4f11-8770-4e96b0b334ef",
              "parentUUID": "3b3b680f-ac19-417c-9d4e-35f82fe671ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve buscar o usuário de uma arquivo json",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar o usuário de uma arquivo json",
              "timedOut": null,
              "duration": 77,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('usuario.json').then(json => {\n  let usuario = {\n    email: json.email,\n    password: json.password\n  };\n});",
              "err": {},
              "uuid": "d03f36b2-20ab-44a9-b419-ef615a3a56b8",
              "parentUUID": "3b3b680f-ac19-417c-9d4e-35f82fe671ba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "49b37188-abba-4f6b-858b-0732aa398318",
            "88a46461-f289-4090-b2da-aed156d887c5",
            "ab31d91a-70f2-4c63-bed5-5ccb0ebdc9e1",
            "995141fb-2616-4f11-8770-4e96b0b334ef",
            "d03f36b2-20ab-44a9-b419-ef615a3a56b8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1773,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}