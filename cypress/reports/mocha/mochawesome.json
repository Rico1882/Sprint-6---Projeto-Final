{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2022-09-28T01:44:32.356Z",
    "end": "2022-09-28T01:44:34.154Z",
    "duration": 1798,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5e2b608c-7875-46b0-a0ec-8b72e8ecbac3",
      "title": "",
      "fullFile": "cypress/integration/1.usuarios.spec.js",
      "file": "cypress/integration/1.usuarios.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f7b61771-f6a8-466a-9312-cb9e404bf865",
          "title": "Casos de teste sobre a rota /usuarios da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os usuarios cadastrados",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar todos os usuarios cadastrados",
              "timedOut": null,
              "duration": 835,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarios().then(res => {\n  cy.contractValidation(res, \"get-usuarios\", 200);\n  _validaServerest.default.validarBuscaDeUsuarios(res);\n});",
              "err": {},
              "uuid": "a5c9af96-60c5-49cd-acb1-4b42097f8b53",
              "parentUUID": "f7b61771-f6a8-466a-9312-cb9e404bf865",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve cadastrar um usuário com sucesso",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve cadastrar um usuário com sucesso",
              "timedOut": null,
              "duration": 232,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let usuario = _factory.default.gerarUsuario();\n_serverest.default.cadastrarUsuario(usuario).then(res => {\n  cy.contractValidation(res, 'post-usuarios', 201);\n  expect(res.body.message).to.be.eq('Cadastro realizado com sucesso');\n  Cypress.env('idUsuarioCadastrado', res.body._id);\n});",
              "err": {},
              "uuid": "fab45c74-96ec-44ae-ad5d-7ecae1bd5dcc",
              "parentUUID": "f7b61771-f6a8-466a-9312-cb9e404bf865",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve buscar usuários por Id",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar usuários por Id",
              "timedOut": null,
              "duration": 232,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuariosPorId().then(res => {\n  cy.contractValidation(res, \"get-usuarios_Id\", 200);\n  _validaServerest.default.validarBuscaDeUsuariosPorId(res);\n});",
              "err": {},
              "uuid": "2571ea1e-8a16-498c-b916-9965199dc928",
              "parentUUID": "f7b61771-f6a8-466a-9312-cb9e404bf865",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve cadastrar um usuário sem sucesso",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve cadastrar um usuário sem sucesso",
              "timedOut": null,
              "duration": 504,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.BuscarUsuarioExistente();\ncy.get('@usuarioExistente').then(usuario => {\n  _serverest.default.cadastrarUsuario(usuario).then(res => {\n    cy.contractValidation(res, 'post-usuarios', 400);\n    expect(res.body.message).to.be.eq('Este email já está sendo usado');\n  });\n});",
              "err": {},
              "uuid": "ce42dfd2-ac02-403e-b7e3-e57f7241dcc4",
              "parentUUID": "f7b61771-f6a8-466a-9312-cb9e404bf865",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a5c9af96-60c5-49cd-acb1-4b42097f8b53",
            "fab45c74-96ec-44ae-ad5d-7ecae1bd5dcc",
            "2571ea1e-8a16-498c-b916-9965199dc928",
            "ce42dfd2-ac02-403e-b7e3-e57f7241dcc4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1803,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}