{
  "stats": {
    "suites": 4,
    "tests": 14,
    "passes": 13,
    "pending": 0,
    "failures": 1,
    "start": "2022-09-28T01:44:32.356Z",
    "end": "2022-09-28T01:45:10.370Z",
    "duration": 7657,
    "testsRegistered": 14,
    "passPercent": 92.85714285714286,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1d9a860d-246d-4366-b470-3dde188d6fde",
      "title": "",
      "fullFile": "cypress/integration/2.login.spec.js",
      "file": "cypress/integration/2.login.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d9438504-090c-4e7c-897d-2a58fe4caa4f",
          "title": "Casos de teste sobre a rota /login da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve realizar login com email e senha corretos",
              "fullTitle": "Casos de teste sobre a rota /login da API Serverest Deve realizar login com email e senha corretos",
              "timedOut": null,
              "duration": 637,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuariosParaLogin();\ncy.get('@usuarioLogin').then(usuario => {\n  _serverest.default.logar(usuario).then(res => {\n    cy.contractValidation(res, \"post-login\", 200);\n    _validaServerest.default.validaLoginComSucesso(res);\n    _serverest.default.salvarBearer(res);\n  });\n});",
              "err": {},
              "uuid": "873eca0b-7807-4046-8f7a-a34db2f67ef9",
              "parentUUID": "d9438504-090c-4e7c-897d-2a58fe4caa4f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Não deve realizar login com email e senha incorretos",
              "fullTitle": "Casos de teste sobre a rota /login da API Serverest Não deve realizar login com email e senha incorretos",
              "timedOut": null,
              "duration": 220,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.loginSemSucesso().then(res => {\n  cy.contractValidation(res, \"post-login\", 400); //login com email e senha invalidos          \n  _validaServerest.default.validaLoginSemSucesso(res);\n});",
              "err": {},
              "uuid": "30c1e2c1-6266-4c67-ab19-cfd209311865",
              "parentUUID": "d9438504-090c-4e7c-897d-2a58fe4caa4f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Não deve realizar login com email e senha em branco",
              "fullTitle": "Casos de teste sobre a rota /login da API Serverest Não deve realizar login com email e senha em branco",
              "timedOut": null,
              "duration": 970,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.loginComEmailBranco().then(res => {\n  cy.contractValidation(res, \"post-login\", 400); //login com email e senha invalidos          \n  expect(res.body.message).to.be.undefined;\n});",
              "err": {
                "message": "Error: Erros encontrados na validação do contrato, por favor verifique: \n must have required property 'message', but receive object",
                "estack": "Error: Erros encontrados na validação do contrato, por favor verifique: \n must have required property 'message', but receive object\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\support\\index.js:159:13)",
                "diff": null
              },
              "uuid": "1e5b7a98-45a1-4cf9-9411-946dbda83484",
              "parentUUID": "d9438504-090c-4e7c-897d-2a58fe4caa4f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "873eca0b-7807-4046-8f7a-a34db2f67ef9",
            "30c1e2c1-6266-4c67-ab19-cfd209311865"
          ],
          "failures": [
            "1e5b7a98-45a1-4cf9-9411-946dbda83484"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1827,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c3f4bf84-2dce-4e71-987b-7a594d31a81b",
      "title": "",
      "fullFile": "cypress/integration/3.produtos.spec.js",
      "file": "cypress/integration/3.produtos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "889fe9a5-3a72-41e7-817c-709cbc277904",
          "title": "Casos de teste sobre a rota /produtos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve Buscar todos os produtos cadastrados",
              "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Deve Buscar todos os produtos cadastrados",
              "timedOut": null,
              "duration": 381,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarProdutos().then(res => {\n  _validaServerest.default.validarBuscaDeProdutos(res);\n});",
              "err": {},
              "uuid": "d873a8a9-b81d-4dd7-8f3b-c7569c011de5",
              "parentUUID": "889fe9a5-3a72-41e7-817c-709cbc277904",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "a61ff3fe-66fc-42f0-96bc-f974892bfc1e",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve Cadastrar um novo produto com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve Cadastrar um novo produto com sucesso",
                  "timedOut": null,
                  "duration": 720,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastrarProdutoComSucesso().then(res => {\n  cy.contractValidation(res, 'post-produtos', 201);\n  _validaServerest.default.validarCadastroDeProdutoComSucesso(res);\n});",
                  "err": {},
                  "uuid": "e58b8f9b-8e3c-405c-b2c3-3f5e651d5040",
                  "parentUUID": "a61ff3fe-66fc-42f0-96bc-f974892bfc1e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve Buscar produto por id",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve Buscar produto por id",
                  "timedOut": null,
                  "duration": 673,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoPorId().then(res => {\n  cy.contractValidation(res, 'get-produtos', 200);\n  _validaServerest.default.validarBuscaDeProdutosPorId(res);\n});",
                  "err": {},
                  "uuid": "69c465e2-668d-467d-8947-7cb01b763ce7",
                  "parentUUID": "a61ff3fe-66fc-42f0-96bc-f974892bfc1e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve Alterar um produto por id",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve Alterar um produto por id",
                  "timedOut": null,
                  "duration": 619,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.editarProdutoPorId().then(res => {\n  expect(res.body.message).to.be.equal('Registro alterado com sucesso');\n});",
                  "err": {},
                  "uuid": "8ee32398-5c52-46eb-bd94-a509c27e496e",
                  "parentUUID": "a61ff3fe-66fc-42f0-96bc-f974892bfc1e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e58b8f9b-8e3c-405c-b2c3-3f5e651d5040",
                "69c465e2-668d-467d-8947-7cb01b763ce7",
                "8ee32398-5c52-46eb-bd94-a509c27e496e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2012,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "d873a8a9-b81d-4dd7-8f3b-c7569c011de5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 381,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3674f29c-8a0a-4a24-be2d-4401dfe0761e",
      "title": "",
      "fullFile": "cypress/integration/4.carrinhos.spec.js",
      "file": "cypress/integration/4.carrinhos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "959a8e6d-7b2c-42c3-9896-cd10483a5260",
          "title": "Casos de teste sobre a rota /Carrinhos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os carrinhos cadastrados na serverest",
              "fullTitle": "Casos de teste sobre a rota /Carrinhos da API Serverest Deve buscar todos os carrinhos cadastrados na serverest",
              "timedOut": null,
              "duration": 319,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarCarrinhos().then(res => {\n  cy.contractValidation(res, \"get-carrinhos\", 200);\n  _validaServerest.default.validarBuscaDeCarrinhos(res);\n});",
              "err": {},
              "uuid": "36c1f894-24f9-4181-a352-45e9b53578d7",
              "parentUUID": "959a8e6d-7b2c-42c3-9896-cd10483a5260",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "d3d5a872-1c82-4f40-99cb-5e61f892f0a1",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve Criar um novo carrinho com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /Carrinhos da API Serverest Logar com sucesso Deve Criar um novo carrinho com sucesso",
                  "timedOut": null,
                  "duration": 663,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastrarCarrinhoComSucesso().then(res => {\n  _validaServerest.default.validarCarrinhoComSucesso(res);\n});",
                  "err": {},
                  "uuid": "b265668a-7c8e-461d-a73b-8b24cf037ba0",
                  "parentUUID": "d3d5a872-1c82-4f40-99cb-5e61f892f0a1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve deletar um carrinho com sucesso - Concluir Compra",
                  "fullTitle": "Casos de teste sobre a rota /Carrinhos da API Serverest Logar com sucesso Deve deletar um carrinho com sucesso - Concluir Compra",
                  "timedOut": null,
                  "duration": 652,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.deletarCarrinhoCadastrado_concluir().then(res => {\n  cy.contractValidation(res, \"delete-carrinhos-concluir-compra\", 200);\n  expect(res.body.message).to.be.equal('Registro excluído com sucesso'); // Código feito com participação de Regina Azzi e Vinivius Alexandre\n});",
                  "err": {},
                  "uuid": "95517aec-f89d-4f50-91f3-f802d8e1aefc",
                  "parentUUID": "d3d5a872-1c82-4f40-99cb-5e61f892f0a1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b265668a-7c8e-461d-a73b-8b24cf037ba0",
                "95517aec-f89d-4f50-91f3-f802d8e1aefc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1315,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "36c1f894-24f9-4181-a352-45e9b53578d7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 319,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5e2b608c-7875-46b0-a0ec-8b72e8ecbac3",
      "title": "",
      "fullFile": "cypress/integration/1.usuarios.spec.js",
      "file": "cypress/integration/1.usuarios.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f7b61771-f6a8-466a-9312-cb9e404bf865",
          "title": "Casos de teste sobre a rota /usuarios da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os usuarios cadastrados",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar todos os usuarios cadastrados",
              "timedOut": null,
              "duration": 835,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarios().then(res => {\n  cy.contractValidation(res, \"get-usuarios\", 200);\n  _validaServerest.default.validarBuscaDeUsuarios(res);\n});",
              "err": {},
              "uuid": "a5c9af96-60c5-49cd-acb1-4b42097f8b53",
              "parentUUID": "f7b61771-f6a8-466a-9312-cb9e404bf865",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve cadastrar um usuário com sucesso",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve cadastrar um usuário com sucesso",
              "timedOut": null,
              "duration": 232,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let usuario = _factory.default.gerarUsuario();\n_serverest.default.cadastrarUsuario(usuario).then(res => {\n  cy.contractValidation(res, 'post-usuarios', 201);\n  expect(res.body.message).to.be.eq('Cadastro realizado com sucesso');\n  Cypress.env('idUsuarioCadastrado', res.body._id);\n});",
              "err": {},
              "uuid": "fab45c74-96ec-44ae-ad5d-7ecae1bd5dcc",
              "parentUUID": "f7b61771-f6a8-466a-9312-cb9e404bf865",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve buscar usuários por Id",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar usuários por Id",
              "timedOut": null,
              "duration": 232,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuariosPorId().then(res => {\n  cy.contractValidation(res, \"get-usuarios_Id\", 200);\n  _validaServerest.default.validarBuscaDeUsuariosPorId(res);\n});",
              "err": {},
              "uuid": "2571ea1e-8a16-498c-b916-9965199dc928",
              "parentUUID": "f7b61771-f6a8-466a-9312-cb9e404bf865",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve cadastrar um usuário sem sucesso",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve cadastrar um usuário sem sucesso",
              "timedOut": null,
              "duration": 504,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.BuscarUsuarioExistente();\ncy.get('@usuarioExistente').then(usuario => {\n  _serverest.default.cadastrarUsuario(usuario).then(res => {\n    cy.contractValidation(res, 'post-usuarios', 400);\n    expect(res.body.message).to.be.eq('Este email já está sendo usado');\n  });\n});",
              "err": {},
              "uuid": "ce42dfd2-ac02-403e-b7e3-e57f7241dcc4",
              "parentUUID": "f7b61771-f6a8-466a-9312-cb9e404bf865",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a5c9af96-60c5-49cd-acb1-4b42097f8b53",
            "fab45c74-96ec-44ae-ad5d-7ecae1bd5dcc",
            "2571ea1e-8a16-498c-b916-9965199dc928",
            "ce42dfd2-ac02-403e-b7e3-e57f7241dcc4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1803,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}