{
  "stats": {
    "suites": 4,
    "tests": 15,
    "passes": 15,
    "pending": 0,
    "failures": 0,
    "start": "2022-09-13T20:28:09.974Z",
    "end": "2022-09-13T20:28:51.599Z",
    "duration": 7029,
    "testsRegistered": 15,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "134b74d7-2d57-4858-8ae6-6938df53e419",
      "title": "",
      "fullFile": "cypress/integration/2.login.spec.js",
      "file": "cypress/integration/2.login.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cfd0498e-27d9-493c-847a-1de9f1f70e67",
          "title": "Casos de teste sobre a rota /login da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve realizar login com suscesso",
              "fullTitle": "Casos de teste sobre a rota /login da API Serverest Deve realizar login com suscesso",
              "timedOut": null,
              "duration": 516,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuariosParaLogin();\ncy.get('@usuarioLogin').then(usuario => {\n  _serverest.default.logar(usuario).then(res => {\n    _validaServerest.default.validaLoginComSucesso(res);\n    _serverest.default.salvarBearer(res);\n  });\n});",
              "err": {},
              "uuid": "53ea9af0-4069-46d0-9215-80f75dcfc172",
              "parentUUID": "cfd0498e-27d9-493c-847a-1de9f1f70e67",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve realizar login sem suscesso",
              "fullTitle": "Casos de teste sobre a rota /login da API Serverest Deve realizar login sem suscesso",
              "timedOut": null,
              "duration": 297,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.loginSemSucesso().then(res => {\n  cy.contractValidation(res, \"get-login\", 401); //login com email e senha invalidos          \n  _validaServerest.default.validaLoginSemSucesso(res);\n});",
              "err": {},
              "uuid": "4058dc86-e078-4150-8cc8-1ca10bd70710",
              "parentUUID": "cfd0498e-27d9-493c-847a-1de9f1f70e67",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "53ea9af0-4069-46d0-9215-80f75dcfc172",
            "4058dc86-e078-4150-8cc8-1ca10bd70710"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 813,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8d8b8c2a-9b01-49b0-8d0b-40feee07fcbb",
      "title": "",
      "fullFile": "cypress/integration/3.produtos.spec.js",
      "file": "cypress/integration/3.produtos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dfa12f11-9104-443e-8235-81c93d7df837",
          "title": "Casos de teste sobre a rota /produtos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os produtos cadastrados",
              "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Deve buscar todos os produtos cadastrados",
              "timedOut": null,
              "duration": 349,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarProdutos().then(res => {\n  _validaServerest.default.validarBuscaDeProdutos(res);\n});",
              "err": {},
              "uuid": "ff4d1b1f-7323-4cfc-afb3-4c9783bf6092",
              "parentUUID": "dfa12f11-9104-443e-8235-81c93d7df837",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "9fb18568-da8e-43f9-aad1-ae4ae467981e",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve postar um novo produto com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve postar um novo produto com sucesso",
                  "timedOut": null,
                  "duration": 581,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastrarProdutoComSucesso().then(res => {\n  _validaServerest.default.validarCadastroDeProdutoComSucesso(res);\n});",
                  "err": {},
                  "uuid": "7f0a3b30-9405-44e4-85f4-709d3792d906",
                  "parentUUID": "9fb18568-da8e-43f9-aad1-ae4ae467981e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve deletar um produto com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve deletar um produto com sucesso",
                  "timedOut": null,
                  "duration": 655,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.deletarProdutoCadastrado().then(res => {\n  cy.contractValidation(res, \"delete-produtos{_id}\", 200);\n  expect(res.body.message).to.be.equal('Registro excluÃ­do com sucesso');\n});",
                  "err": {},
                  "uuid": "1536b879-4dd8-4352-adfb-931243469e05",
                  "parentUUID": "9fb18568-da8e-43f9-aad1-ae4ae467981e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7f0a3b30-9405-44e4-85f4-709d3792d906",
                "1536b879-4dd8-4352-adfb-931243469e05"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1236,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "ff4d1b1f-7323-4cfc-afb3-4c9783bf6092"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 349,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "78763a9e-8fda-4fc6-9b27-8c7e935c5630",
      "title": "",
      "fullFile": "cypress/integration/4.carrinhos.spec.js",
      "file": "cypress/integration/4.carrinhos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dae11001-7f7f-4777-a125-5af9da856ae5",
          "title": "Casos de teste sobre a rota /Carrinhos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os carrinhos cadastrados na serverest",
              "fullTitle": "Casos de teste sobre a rota /Carrinhos da API Serverest Deve buscar todos os carrinhos cadastrados na serverest",
              "timedOut": null,
              "duration": 346,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarCarrinhos().then(res => {\n  cy.contractValidation(res, \"get-carrinhos\", 200);\n  _validaServerest.default.validarBuscaDeCarrinhos(res);\n});",
              "err": {},
              "uuid": "8f9db17f-4067-438d-b143-10761ccc9c45",
              "parentUUID": "dae11001-7f7f-4777-a125-5af9da856ae5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "07a3ceae-31f0-4051-9833-11561548c033",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve Criar um novo carrinho com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /Carrinhos da API Serverest Logar com sucesso Deve Criar um novo carrinho com sucesso",
                  "timedOut": null,
                  "duration": 681,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastrarCarrinhoComSucesso().then(res => {\n  _validaServerest.default.validarCarrinhoComSucesso(res);\n});",
                  "err": {},
                  "uuid": "29b8b629-9c7d-4c5d-9481-82fe3f09422f",
                  "parentUUID": "07a3ceae-31f0-4051-9833-11561548c033",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve deletar um carrinho com sucesso - Concluir Compra",
                  "fullTitle": "Casos de teste sobre a rota /Carrinhos da API Serverest Logar com sucesso Deve deletar um carrinho com sucesso - Concluir Compra",
                  "timedOut": null,
                  "duration": 596,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.deletarCarrinhoCadastrado_concluir().then(res => {\n  cy.contractValidation(res, \"delete-carrinhos-concluir-compra\", 200);\n  expect(res.body.message).to.be.equal('Registro excluÃ­do com sucesso'); // CÃ³digo feito com participaÃ§Ã£o de Regina Azzi e Vinivius Alexandre\n});",
                  "err": {},
                  "uuid": "190d4b64-7b3e-404f-85a7-8189e4d29744",
                  "parentUUID": "07a3ceae-31f0-4051-9833-11561548c033",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve Criar um novo carrinho com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /Carrinhos da API Serverest Logar com sucesso Deve Criar um novo carrinho com sucesso",
                  "timedOut": null,
                  "duration": 634,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastrarCarrinhoComSucesso().then(res => {\n  _validaServerest.default.validarCarrinhoComSucesso(res);\n});",
                  "err": {},
                  "uuid": "53afcc7f-f147-4376-a967-6ab4c7502c15",
                  "parentUUID": "07a3ceae-31f0-4051-9833-11561548c033",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve deletar um carrinho com sucesso - Cancelar Compra",
                  "fullTitle": "Casos de teste sobre a rota /Carrinhos da API Serverest Logar com sucesso Deve deletar um carrinho com sucesso - Cancelar Compra",
                  "timedOut": null,
                  "duration": 601,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.deletarCarrinhoCadastrado_cancelar().then(res => {\n  cy.contractValidation(res, \"delete-carrinhos-cancelar-compra\", 200);\n  expect(res.body.message).to.be.equal('Registro excluÃ­do com sucesso. Estoque dos produtos reabastecido'); // CÃ³digo feito com participaÃ§Ã£o de Regina Azzi e Vinivius Alexandre\n});",
                  "err": {},
                  "uuid": "bb6a9733-78c2-485e-a8a5-d23160cde8f1",
                  "parentUUID": "07a3ceae-31f0-4051-9833-11561548c033",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "29b8b629-9c7d-4c5d-9481-82fe3f09422f",
                "190d4b64-7b3e-404f-85a7-8189e4d29744",
                "53afcc7f-f147-4376-a967-6ab4c7502c15",
                "bb6a9733-78c2-485e-a8a5-d23160cde8f1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2512,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "8f9db17f-4067-438d-b143-10761ccc9c45"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 346,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4d98233f-b000-429a-919a-63c7fef7ca47",
      "title": "",
      "fullFile": "cypress/integration/1.usuarios.spec.js",
      "file": "cypress/integration/1.usuarios.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3b3b680f-ac19-417c-9d4e-35f82fe671ba",
          "title": "Casos de teste sobre a rota /usuarios da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os usuarios cadastrados na serverest",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar todos os usuarios cadastrados na serverest",
              "timedOut": null,
              "duration": 709,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarios().then(res => {\n  cy.log('SerÃ¡ validado o contrato');\n  cy.contractValidation(res, \"get-usuarios\", 200);\n  _validaServerest.default.validarBuscaDeUsuarios(res);\n});",
              "err": {},
              "uuid": "49b37188-abba-4f6b-858b-0732aa398318",
              "parentUUID": "3b3b680f-ac19-417c-9d4e-35f82fe671ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "NÃ£o deve postar um novo usuÃ¡rio administrador existente",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest NÃ£o deve postar um novo usuÃ¡rio administrador existente",
              "timedOut": null,
              "duration": 296,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.postarUsuarioSemSucesso().then(res => {\n  cy.contractValidation(res, \"post-usuarios\", 400);\n  expect(res.body.message).to.be.eq('Este email jÃ¡ estÃ¡ sendo usado');\n});",
              "err": {},
              "uuid": "88a46461-f289-4090-b2da-aed156d887c5",
              "parentUUID": "3b3b680f-ac19-417c-9d4e-35f82fe671ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve realizar login com suscesso",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve realizar login com suscesso",
              "timedOut": null,
              "duration": 446,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuariosParaLogin();\ncy.get('@usuarioLogin').then(usuario => {\n  _serverest.default.logar(usuario).then(res => {\n    _validaServerest.default.validaLoginComSucesso(res);\n    _serverest.default.salvarBearer(res);\n  });\n});",
              "err": {},
              "uuid": "ab31d91a-70f2-4c63-bed5-5ccb0ebdc9e1",
              "parentUUID": "3b3b680f-ac19-417c-9d4e-35f82fe671ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve buscar e salvar um usuÃ¡rio em um arquivo json",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar e salvar um usuÃ¡rio em um arquivo json",
              "timedOut": null,
              "duration": 245,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarios().then(res => {\n  let qtd_usuarios = res.body.quantidade;\n  let inteiro = _factory.default.gerarInteiroAleatorio();\n  cy.writeFile('./cypress/fixtures/usuario.json', res.body.usuarios[inteiro]);\n  _validaServerest.default.validarBuscaDeUsuarios(res);\n});",
              "err": {},
              "uuid": "995141fb-2616-4f11-8770-4e96b0b334ef",
              "parentUUID": "3b3b680f-ac19-417c-9d4e-35f82fe671ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve buscar o usuÃ¡rio de uma arquivo json",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar o usuÃ¡rio de uma arquivo json",
              "timedOut": null,
              "duration": 77,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('usuario.json').then(json => {\n  let usuario = {\n    email: json.email,\n    password: json.password\n  };\n});",
              "err": {},
              "uuid": "d03f36b2-20ab-44a9-b419-ef615a3a56b8",
              "parentUUID": "3b3b680f-ac19-417c-9d4e-35f82fe671ba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "49b37188-abba-4f6b-858b-0732aa398318",
            "88a46461-f289-4090-b2da-aed156d887c5",
            "ab31d91a-70f2-4c63-bed5-5ccb0ebdc9e1",
            "995141fb-2616-4f11-8770-4e96b0b334ef",
            "d03f36b2-20ab-44a9-b419-ef615a3a56b8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1773,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}